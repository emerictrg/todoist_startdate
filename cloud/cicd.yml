AWSTemplateFormatVersion: '2010-09-09'
Description: Todoist start  date project:CICD stack

Resources:

  
  LambdaSourceBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "{{resolve:ssm:TodoistLambdaBucket:3}}"
      Tags:
        - Key: "Application"
          Value: "Todoist start date"

  LambdaSourceBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: !Ref "LambdaSourceBucket"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Action: "s3:*"
            Effect: "Allow"
            Resource: 
              - !GetAtt "LambdaSourceBucket.Arn"
              - !Sub
                - "${bucketarn}/*"
                - { "bucketarn": !GetAtt "LambdaSourceBucket.Arn" }
            Principal:
              Service: 
                - "codepipeline.amazonaws.com"
                - "codebuild.amazonaws.com"
                - "cloudformation.amazonaws.com"

  ImageRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "todoist-ci"
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowPushPull"
            Effect: "Allow"
            Principal:
              AWS: 
                - !Sub "arn:aws:iam::${AWS::AccountId}:user/todoist"
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"

  BuilderServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess"
        - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      RoleName: "todoist-codebuilder-role"

  Builder:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: "todoist-start-date-ci"
      Description: "Todoist Project start date continuous integration"
      Artifacts: 
        Type: "CODEPIPELINE"
      LogsConfig: 
        CloudWatchLogs:
          Status: "ENABLED"
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: !Sub
          - "${ImageURI}:latest"
          - { "ImageURI": !GetAtt "ImageRepository.RepositoryUri" }
        ImagePullCredentialsType: "CODEBUILD"
      Source:
        Type: "CODEPIPELINE"
      ServiceRole: !GetAtt "BuilderServiceRole.Arn"
      Visibility: "PRIVATE"
      Tags:
        - Key: "Application"
          Value: "Todoist start date"
      
  PipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess"
        - "arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess"
        - "arn:aws:iam::aws:policy/AWSCloudFormationFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      Policies:
        - PolicyName: "allow-pass-role"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              Effect: "Allow"
              Action:
                - "iam:PassRole"
              Resource: "*"
      RoleName: "todoist-codepipeline-role"

  CFExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: 
                - "cloudformation.amazonaws.com"
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/IAMFullAccess"
        - "arn:aws:iam::aws:policy/AWSLambda_FullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      Policies:
        - PolicyName: "allow-parameter-store"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: 
                  - "ssm:GetParameters"
                Resource: "*"

  DeploymentPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: "TodoistCodePipeline"
      RoleArn: !GetAtt "PipelineRole.Arn"
      ArtifactStore:
        Type: "S3"
        Location: !Ref "LambdaSourceBucket"
      RestartExecutionOnUpdate: False
      Stages:
        - Name: "Source"
          Actions:
            - ActionTypeId:
                Category: "Source"
                Owner: "ThirdParty"
                Provider: "GitHub"
                Version: 1
              Name: "DownloadSource"
              Configuration:
                Owner: "emerictrg"
                Repo: "todoist_startdate"
                Branch: "main"
                OAuthToken: "{{resolve:ssm:TodoistgithubAccessToken:2}}"
                PollForSourceChanges: False
              OutputArtifacts:
                - Name: "todoist-source"
        - Name: "Build"
          Actions:
            - ActionTypeId:
               Category: "Build"
               Owner: "AWS"
               Provider: "CodeBuild"
               Version: 1
              Name: "TestAndBuild"
              Configuration:
                ProjectName: !Ref "Builder"
              InputArtifacts:
                - Name: "todoist-source"
              OutputArtifacts:
                - Name: "todoist-packaged"
        - Name: "DeployInProduction"
          Actions:
            - ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "CloudFormation"
                Version: 1
              Name: "DeployProduction"
              Configuration:
                ActionMode: "CREATE_UPDATE"
                StackName: "TodoistLambdaStack"
                Capabilities: "CAPABILITY_NAMED_IAM"
                ChangeSetName: "todoist-pipeline-changes"
                TemplatePath: "todoist-packaged::cloud/lambda.yml"
                RoleArn: !GetAtt "CFExecutionRole.Arn"
                ParameterOverrides: |
                  {
                    "LambdaSourceBucket": { "Fn::GetArtifactAtt": [ "todoist-packaged", "BucketName" ] },
                    "LambdaSourceKey": { "Fn::GetArtifactAtt": [ "todoist-packaged", "ObjectKey" ] }
                  }
              InputArtifacts:
                - Name: "todoist-packaged"
      Tags:
        - Key: "Application"
          Value: "Todoist start date"

  PipelineWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties: 
      Authentication: "GITHUB_HMAC"
      AuthenticationConfiguration: 
        SecretToken: "{{resolve:ssm:TodoistGithubWebhookSecret:2}}"
      Filters: 
        - JsonPath: "$.ref"
          MatchEquals: "refs/heads/{Branch}"
      Name: "TodoistGithubWebhook"
      RegisterWithThirdParty: True
      TargetAction: "DownloadSource"
      TargetPipeline: !Ref "DeploymentPipeline"
      TargetPipelineVersion: !GetAtt "DeploymentPipeline.Version"


